// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: user.proto

package user

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendSmsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone  string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *SendSmsReq) Reset() {
	*x = SendSmsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSmsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSmsReq) ProtoMessage() {}

func (x *SendSmsReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSmsReq.ProtoReflect.Descriptor instead.
func (*SendSmsReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

func (x *SendSmsReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SendSmsReq) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type SendSmsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SendSmsResp) Reset() {
	*x = SendSmsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSmsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSmsResp) ProtoMessage() {}

func (x *SendSmsResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSmsResp.ProtoReflect.Descriptor instead.
func (*SendSmsResp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

func (x *SendSmsResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendSmsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone    string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	SmsCode  string `protobuf:"bytes,3,opt,name=smsCode,proto3" json:"smsCode,omitempty"`
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *RegisterReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterReq) GetSmsCode() string {
	if x != nil {
		return x.SmsCode
	}
	return ""
}

type RegisterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RegisterResp) Reset() {
	*x = RegisterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResp) ProtoMessage() {}

func (x *RegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResp.ProtoReflect.Descriptor instead.
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RegisterResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone    string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	SmsCode  string `protobuf:"bytes,3,opt,name=smsCode,proto3" json:"smsCode,omitempty"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4}
}

func (x *LoginReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginReq) GetSmsCode() string {
	if x != nil {
		return x.SmsCode
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Id   int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{5}
}

func (x *LoginResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoginResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LoginResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type VideoWorkAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                         //标题
	Describe       string `protobuf:"bytes,2,opt,name=describe,proto3" json:"describe,omitempty"`                                   //描述
	MusicId        int64  `protobuf:"varint,3,opt,name=music_id,json=musicId,proto3" json:"music_id,omitempty"`                     //选择音乐
	Status         string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                                       //审核状态
	WorkCate       string `protobuf:"bytes,5,opt,name=work_cate,json=workCate,proto3" json:"work_cate,omitempty"`                   //作品类型
	Reviewer       string `protobuf:"bytes,6,opt,name=reviewer,proto3" json:"reviewer,omitempty"`                                   //审核人
	WorkPermission string `protobuf:"bytes,7,opt,name=work_permission,json=workPermission,proto3" json:"work_permission,omitempty"` //作品权限
	Address        string `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`                                     //地址
	LikeNum        int64  `protobuf:"varint,9,opt,name=like_num,json=likeNum,proto3" json:"like_num,omitempty"`                     //喜欢数量
	ContentNum     int64  `protobuf:"varint,10,opt,name=content_num,json=contentNum,proto3" json:"content_num,omitempty"`           //评论数
	ShareNum       int64  `protobuf:"varint,11,opt,name=share_num,json=shareNum,proto3" json:"share_num,omitempty"`                 //分享数
	CollectNum     int64  `protobuf:"varint,12,opt,name=collect_num,json=collectNum,proto3" json:"collect_num,omitempty"`           //收藏数
	BrowseNum      int64  `protobuf:"varint,13,opt,name=browse_num,json=browseNum,proto3" json:"browse_num,omitempty"`              //浏览量
}

func (x *VideoWorkAddReq) Reset() {
	*x = VideoWorkAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoWorkAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoWorkAddReq) ProtoMessage() {}

func (x *VideoWorkAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoWorkAddReq.ProtoReflect.Descriptor instead.
func (*VideoWorkAddReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6}
}

func (x *VideoWorkAddReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoWorkAddReq) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *VideoWorkAddReq) GetMusicId() int64 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

func (x *VideoWorkAddReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VideoWorkAddReq) GetWorkCate() string {
	if x != nil {
		return x.WorkCate
	}
	return ""
}

func (x *VideoWorkAddReq) GetReviewer() string {
	if x != nil {
		return x.Reviewer
	}
	return ""
}

func (x *VideoWorkAddReq) GetWorkPermission() string {
	if x != nil {
		return x.WorkPermission
	}
	return ""
}

func (x *VideoWorkAddReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *VideoWorkAddReq) GetLikeNum() int64 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *VideoWorkAddReq) GetContentNum() int64 {
	if x != nil {
		return x.ContentNum
	}
	return 0
}

func (x *VideoWorkAddReq) GetShareNum() int64 {
	if x != nil {
		return x.ShareNum
	}
	return 0
}

func (x *VideoWorkAddReq) GetCollectNum() int64 {
	if x != nil {
		return x.CollectNum
	}
	return 0
}

func (x *VideoWorkAddReq) GetBrowseNum() int64 {
	if x != nil {
		return x.BrowseNum
	}
	return 0
}

type VideoWorkAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *VideoWorkAddResp) Reset() {
	*x = VideoWorkAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoWorkAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoWorkAddResp) ProtoMessage() {}

func (x *VideoWorkAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoWorkAddResp.ProtoReflect.Descriptor instead.
func (*VideoWorkAddResp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7}
}

func (x *VideoWorkAddResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VideoWorkAddResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type WorkStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkCate string `protobuf:"bytes,1,opt,name=work_cate,json=workCate,proto3" json:"work_cate,omitempty"`
}

func (x *WorkStatusReq) Reset() {
	*x = WorkStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkStatusReq) ProtoMessage() {}

func (x *WorkStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkStatusReq.ProtoReflect.Descriptor instead.
func (*WorkStatusReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8}
}

func (x *WorkStatusReq) GetWorkCate() string {
	if x != nil {
		return x.WorkCate
	}
	return ""
}

type WorkStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*WorkStatus `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *WorkStatusResp) Reset() {
	*x = WorkStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkStatusResp) ProtoMessage() {}

func (x *WorkStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkStatusResp.ProtoReflect.Descriptor instead.
func (*WorkStatusResp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{9}
}

func (x *WorkStatusResp) GetList() []*WorkStatus {
	if x != nil {
		return x.List
	}
	return nil
}

type WorkStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                         //标题
	Describe       string `protobuf:"bytes,2,opt,name=describe,proto3" json:"describe,omitempty"`                                   //描述
	MusicId        int64  `protobuf:"varint,3,opt,name=music_id,json=musicId,proto3" json:"music_id,omitempty"`                     //选择音乐
	Status         string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                                       //审核状态
	WorkCate       string `protobuf:"bytes,5,opt,name=work_cate,json=workCate,proto3" json:"work_cate,omitempty"`                   //作品类型
	Reviewer       string `protobuf:"bytes,6,opt,name=reviewer,proto3" json:"reviewer,omitempty"`                                   //审核人
	WorkPermission string `protobuf:"bytes,7,opt,name=work_permission,json=workPermission,proto3" json:"work_permission,omitempty"` //作品权限
	Address        string `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`                                     //地址
	LikeNum        int64  `protobuf:"varint,9,opt,name=like_num,json=likeNum,proto3" json:"like_num,omitempty"`                     //喜欢数量
	ContentNum     int64  `protobuf:"varint,10,opt,name=content_num,json=contentNum,proto3" json:"content_num,omitempty"`           //评论数
	ShareNum       int64  `protobuf:"varint,11,opt,name=share_num,json=shareNum,proto3" json:"share_num,omitempty"`                 //分享数
	CollectNum     int64  `protobuf:"varint,12,opt,name=collect_num,json=collectNum,proto3" json:"collect_num,omitempty"`           //收藏数
	BrowseNum      int64  `protobuf:"varint,13,opt,name=browse_num,json=browseNum,proto3" json:"browse_num,omitempty"`              //浏览量
}

func (x *WorkStatus) Reset() {
	*x = WorkStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkStatus) ProtoMessage() {}

func (x *WorkStatus) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkStatus.ProtoReflect.Descriptor instead.
func (*WorkStatus) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10}
}

func (x *WorkStatus) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *WorkStatus) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *WorkStatus) GetMusicId() int64 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

func (x *WorkStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WorkStatus) GetWorkCate() string {
	if x != nil {
		return x.WorkCate
	}
	return ""
}

func (x *WorkStatus) GetReviewer() string {
	if x != nil {
		return x.Reviewer
	}
	return ""
}

func (x *WorkStatus) GetWorkPermission() string {
	if x != nil {
		return x.WorkPermission
	}
	return ""
}

func (x *WorkStatus) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WorkStatus) GetLikeNum() int64 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *WorkStatus) GetContentNum() int64 {
	if x != nil {
		return x.ContentNum
	}
	return 0
}

func (x *WorkStatus) GetShareNum() int64 {
	if x != nil {
		return x.ShareNum
	}
	return 0
}

func (x *WorkStatus) GetCollectNum() int64 {
	if x != nil {
		return x.CollectNum
	}
	return 0
}

func (x *WorkStatus) GetBrowseNum() int64 {
	if x != nil {
		return x.BrowseNum
	}
	return 0
}

type UserCenterAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                   //名称
	NickName      string `protobuf:"bytes,2,opt,name=NickName,proto3" json:"NickName,omitempty"`           //昵称
	UserCode      string `protobuf:"bytes,3,opt,name=UserCode,proto3" json:"UserCode,omitempty"`           //编号
	Signature     string `protobuf:"bytes,4,opt,name=Signature,proto3" json:"Signature,omitempty"`         //签名
	Sex           string `protobuf:"bytes,5,opt,name=Sex,proto3" json:"Sex,omitempty"`                     //性别
	IpAddress     string `protobuf:"bytes,6,opt,name=IpAddress,proto3" json:"IpAddress,omitempty"`         //ip地址
	Constellation string `protobuf:"bytes,7,opt,name=Constellation,proto3" json:"Constellation,omitempty"` //星座
	AttendCount   int64  `protobuf:"varint,8,opt,name=AttendCount,proto3" json:"AttendCount,omitempty"`    //关注数
	FanCount      int64  `protobuf:"varint,9,opt,name=FanCount,proto3" json:"FanCount,omitempty"`          //粉丝数
	ZanCount      int64  `protobuf:"varint,10,opt,name=ZanCount,proto3" json:"ZanCount,omitempty"`         //点赞数
	Status        string `protobuf:"bytes,11,opt,name=Status,proto3" json:"Status,omitempty"`              //用户状态
	ImageId       int64  `protobuf:"varint,12,opt,name=ImageId,proto3" json:"ImageId,omitempty"`           //头像
	Info          string `protobuf:"bytes,13,opt,name=Info,proto3" json:"Info,omitempty"`                  //认证信息
	Mobile        string `protobuf:"bytes,14,opt,name=Mobile,proto3" json:"Mobile,omitempty"`              //手机号
	RealNameAuth  string `protobuf:"bytes,15,opt,name=RealNameAuth,proto3" json:"RealNameAuth,omitempty"`  //实名认证状态
	Age           string `protobuf:"bytes,16,opt,name=Age,proto3" json:"Age,omitempty"`                    //年龄
	OnlineStatus  string `protobuf:"bytes,17,opt,name=OnlineStatus,proto3" json:"OnlineStatus,omitempty"`  //在线状态
	Type          string `protobuf:"bytes,18,opt,name=Type,proto3" json:"Type,omitempty"`                  //认证类型
	Level         string `protobuf:"bytes,19,opt,name=Level,proto3" json:"Level,omitempty"`                //用户等级
	Balance       string `protobuf:"bytes,20,opt,name=Balance,proto3" json:"Balance,omitempty"`            //余额
}

func (x *UserCenterAddReq) Reset() {
	*x = UserCenterAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCenterAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCenterAddReq) ProtoMessage() {}

func (x *UserCenterAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCenterAddReq.ProtoReflect.Descriptor instead.
func (*UserCenterAddReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{11}
}

func (x *UserCenterAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserCenterAddReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserCenterAddReq) GetUserCode() string {
	if x != nil {
		return x.UserCode
	}
	return ""
}

func (x *UserCenterAddReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *UserCenterAddReq) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *UserCenterAddReq) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *UserCenterAddReq) GetConstellation() string {
	if x != nil {
		return x.Constellation
	}
	return ""
}

func (x *UserCenterAddReq) GetAttendCount() int64 {
	if x != nil {
		return x.AttendCount
	}
	return 0
}

func (x *UserCenterAddReq) GetFanCount() int64 {
	if x != nil {
		return x.FanCount
	}
	return 0
}

func (x *UserCenterAddReq) GetZanCount() int64 {
	if x != nil {
		return x.ZanCount
	}
	return 0
}

func (x *UserCenterAddReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserCenterAddReq) GetImageId() int64 {
	if x != nil {
		return x.ImageId
	}
	return 0
}

func (x *UserCenterAddReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *UserCenterAddReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserCenterAddReq) GetRealNameAuth() string {
	if x != nil {
		return x.RealNameAuth
	}
	return ""
}

func (x *UserCenterAddReq) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *UserCenterAddReq) GetOnlineStatus() string {
	if x != nil {
		return x.OnlineStatus
	}
	return ""
}

func (x *UserCenterAddReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserCenterAddReq) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *UserCenterAddReq) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type UserCenterAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UserCenterAddResp) Reset() {
	*x = UserCenterAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCenterAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCenterAddResp) ProtoMessage() {}

func (x *UserCenterAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCenterAddResp.ProtoReflect.Descriptor instead.
func (*UserCenterAddResp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12}
}

func (x *UserCenterAddResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserCenterAddResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UserCenterListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserCenterListReq) Reset() {
	*x = UserCenterListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCenterListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCenterListReq) ProtoMessage() {}

func (x *UserCenterListReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCenterListReq.ProtoReflect.Descriptor instead.
func (*UserCenterListReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{13}
}

type UserCenterListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*UserCenterList `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserCenterListResp) Reset() {
	*x = UserCenterListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCenterListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCenterListResp) ProtoMessage() {}

func (x *UserCenterListResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCenterListResp.ProtoReflect.Descriptor instead.
func (*UserCenterListResp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{14}
}

func (x *UserCenterListResp) GetList() []*UserCenterList {
	if x != nil {
		return x.List
	}
	return nil
}

type UserCenterList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                   //名称
	NickName      string `protobuf:"bytes,2,opt,name=NickName,proto3" json:"NickName,omitempty"`           //昵称
	UserCode      string `protobuf:"bytes,3,opt,name=UserCode,proto3" json:"UserCode,omitempty"`           //编号
	Signature     string `protobuf:"bytes,4,opt,name=Signature,proto3" json:"Signature,omitempty"`         //签名
	Sex           string `protobuf:"bytes,5,opt,name=Sex,proto3" json:"Sex,omitempty"`                     //性别
	IpAddress     string `protobuf:"bytes,6,opt,name=IpAddress,proto3" json:"IpAddress,omitempty"`         //ip地址
	Constellation string `protobuf:"bytes,7,opt,name=Constellation,proto3" json:"Constellation,omitempty"` //星座
	AttendCount   int64  `protobuf:"varint,8,opt,name=AttendCount,proto3" json:"AttendCount,omitempty"`    //关注数
	FanCount      int64  `protobuf:"varint,9,opt,name=FanCount,proto3" json:"FanCount,omitempty"`          //粉丝数
	ZanCount      int64  `protobuf:"varint,10,opt,name=ZanCount,proto3" json:"ZanCount,omitempty"`         //点赞数
	Status        string `protobuf:"bytes,11,opt,name=Status,proto3" json:"Status,omitempty"`              //用户状态
	ImageId       int64  `protobuf:"varint,12,opt,name=ImageId,proto3" json:"ImageId,omitempty"`           //头像
	Info          string `protobuf:"bytes,13,opt,name=Info,proto3" json:"Info,omitempty"`                  //认证信息
	Mobile        string `protobuf:"bytes,14,opt,name=Mobile,proto3" json:"Mobile,omitempty"`              //手机号
	RealNameAuth  string `protobuf:"bytes,15,opt,name=RealNameAuth,proto3" json:"RealNameAuth,omitempty"`  //实名认证状态
	Age           string `protobuf:"bytes,16,opt,name=Age,proto3" json:"Age,omitempty"`                    //年龄
	OnlineStatus  string `protobuf:"bytes,17,opt,name=OnlineStatus,proto3" json:"OnlineStatus,omitempty"`  //在线状态
	Type          string `protobuf:"bytes,18,opt,name=Type,proto3" json:"Type,omitempty"`                  //认证类型
	Level         string `protobuf:"bytes,19,opt,name=Level,proto3" json:"Level,omitempty"`                //用户等级
	Balance       string `protobuf:"bytes,20,opt,name=Balance,proto3" json:"Balance,omitempty"`            //余额
}

func (x *UserCenterList) Reset() {
	*x = UserCenterList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCenterList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCenterList) ProtoMessage() {}

func (x *UserCenterList) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCenterList.ProtoReflect.Descriptor instead.
func (*UserCenterList) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{15}
}

func (x *UserCenterList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserCenterList) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserCenterList) GetUserCode() string {
	if x != nil {
		return x.UserCode
	}
	return ""
}

func (x *UserCenterList) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *UserCenterList) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *UserCenterList) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *UserCenterList) GetConstellation() string {
	if x != nil {
		return x.Constellation
	}
	return ""
}

func (x *UserCenterList) GetAttendCount() int64 {
	if x != nil {
		return x.AttendCount
	}
	return 0
}

func (x *UserCenterList) GetFanCount() int64 {
	if x != nil {
		return x.FanCount
	}
	return 0
}

func (x *UserCenterList) GetZanCount() int64 {
	if x != nil {
		return x.ZanCount
	}
	return 0
}

func (x *UserCenterList) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserCenterList) GetImageId() int64 {
	if x != nil {
		return x.ImageId
	}
	return 0
}

func (x *UserCenterList) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *UserCenterList) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserCenterList) GetRealNameAuth() string {
	if x != nil {
		return x.RealNameAuth
	}
	return ""
}

func (x *UserCenterList) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *UserCenterList) GetOnlineStatus() string {
	if x != nil {
		return x.OnlineStatus
	}
	return ""
}

func (x *UserCenterList) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserCenterList) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *UserCenterList) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

var File_user_proto protoreflect.FileDescriptor

var file_user_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0x3a, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x33,
	0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x59, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x34,
	0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x56, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x41, 0x0a, 0x09,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x8b, 0x03, 0x0a, 0x0f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x43, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x38, 0x0a,
	0x10, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x2c, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x43, 0x61, 0x74, 0x65, 0x22, 0x36, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x86, 0x03,
	0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0xa8, 0x04, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x53, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x41,
	0x74, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x46, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x5a, 0x61, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x5a, 0x61, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x67, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x41, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0x39, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x13, 0x0a, 0x11,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x22, 0x3e, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xa6, 0x04, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x53, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x65, 0x78,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x61, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x46, 0x61, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x5a, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x5a, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x41, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x41,
	0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x32, 0x92, 0x03, 0x0a, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x12, 0x10,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3d, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x41, 0x64, 0x64,
	0x12, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x57, 0x6f, 0x72,
	0x6b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x37, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42,
	0x08, 0x5a, 0x06, 0x2e, 0x3b, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_user_proto_rawDescOnce sync.Once
	file_user_proto_rawDescData = file_user_proto_rawDesc
)

func file_user_proto_rawDescGZIP() []byte {
	file_user_proto_rawDescOnce.Do(func() {
		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_proto_rawDescData)
	})
	return file_user_proto_rawDescData
}

var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_user_proto_goTypes = []any{
	(*SendSmsReq)(nil),         // 0: user.SendSmsReq
	(*SendSmsResp)(nil),        // 1: user.SendSmsResp
	(*RegisterReq)(nil),        // 2: user.RegisterReq
	(*RegisterResp)(nil),       // 3: user.RegisterResp
	(*LoginReq)(nil),           // 4: user.LoginReq
	(*LoginResp)(nil),          // 5: user.LoginResp
	(*VideoWorkAddReq)(nil),    // 6: user.VideoWorkAddReq
	(*VideoWorkAddResp)(nil),   // 7: user.VideoWorkAddResp
	(*WorkStatusReq)(nil),      // 8: user.WorkStatusReq
	(*WorkStatusResp)(nil),     // 9: user.WorkStatusResp
	(*WorkStatus)(nil),         // 10: user.WorkStatus
	(*UserCenterAddReq)(nil),   // 11: user.UserCenterAddReq
	(*UserCenterAddResp)(nil),  // 12: user.UserCenterAddResp
	(*UserCenterListReq)(nil),  // 13: user.UserCenterListReq
	(*UserCenterListResp)(nil), // 14: user.UserCenterListResp
	(*UserCenterList)(nil),     // 15: user.UserCenterList
}
var file_user_proto_depIdxs = []int32{
	10, // 0: user.WorkStatusResp.list:type_name -> user.WorkStatus
	15, // 1: user.UserCenterListResp.list:type_name -> user.UserCenterList
	0,  // 2: user.User.SendSms:input_type -> user.SendSmsReq
	2,  // 3: user.User.Register:input_type -> user.RegisterReq
	4,  // 4: user.User.Login:input_type -> user.LoginReq
	6,  // 5: user.User.VideoWorkAdd:input_type -> user.VideoWorkAddReq
	8,  // 6: user.User.WorkStatus:input_type -> user.WorkStatusReq
	11, // 7: user.User.UserCenterAdd:input_type -> user.UserCenterAddReq
	13, // 8: user.User.UserCenterList:input_type -> user.UserCenterListReq
	1,  // 9: user.User.SendSms:output_type -> user.SendSmsResp
	3,  // 10: user.User.Register:output_type -> user.RegisterResp
	5,  // 11: user.User.Login:output_type -> user.LoginResp
	7,  // 12: user.User.VideoWorkAdd:output_type -> user.VideoWorkAddResp
	9,  // 13: user.User.WorkStatus:output_type -> user.WorkStatusResp
	12, // 14: user.User.UserCenterAdd:output_type -> user.UserCenterAddResp
	14, // 15: user.User.UserCenterList:output_type -> user.UserCenterListResp
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_user_proto_init() }
func file_user_proto_init() {
	if File_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SendSmsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SendSmsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*VideoWorkAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*VideoWorkAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*WorkStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*WorkStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*WorkStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UserCenterAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UserCenterAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*UserCenterListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*UserCenterListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*UserCenterList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_proto_goTypes,
		DependencyIndexes: file_user_proto_depIdxs,
		MessageInfos:      file_user_proto_msgTypes,
	}.Build()
	File_user_proto = out.File
	file_user_proto_rawDesc = nil
	file_user_proto_goTypes = nil
	file_user_proto_depIdxs = nil
}
