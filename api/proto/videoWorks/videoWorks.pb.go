// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: videoWorks.proto

package videoWorks

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddVideoWorksReq struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	UserId   int32                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Title    string                 `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Desc     string                 `protobuf:"bytes,3,opt,name=Desc,proto3" json:"Desc,omitempty"`
	MusicId  int32                  `protobuf:"varint,4,opt,name=MusicId,proto3" json:"MusicId,omitempty"`
	WorkType string                 `protobuf:"bytes,5,opt,name=WorkType,proto3" json:"WorkType,omitempty"`
	// string CheckStatus = 6;
	// int32 CheckUser = 7;
	Ip            string `protobuf:"bytes,8,opt,name=Ip,proto3" json:"Ip,omitempty"`
	FilePath      string `protobuf:"bytes,9,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddVideoWorksReq) Reset() {
	*x = AddVideoWorksReq{}
	mi := &file_videoWorks_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddVideoWorksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVideoWorksReq) ProtoMessage() {}

func (x *AddVideoWorksReq) ProtoReflect() protoreflect.Message {
	mi := &file_videoWorks_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVideoWorksReq.ProtoReflect.Descriptor instead.
func (*AddVideoWorksReq) Descriptor() ([]byte, []int) {
	return file_videoWorks_proto_rawDescGZIP(), []int{0}
}

func (x *AddVideoWorksReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddVideoWorksReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddVideoWorksReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AddVideoWorksReq) GetMusicId() int32 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

func (x *AddVideoWorksReq) GetWorkType() string {
	if x != nil {
		return x.WorkType
	}
	return ""
}

func (x *AddVideoWorksReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AddVideoWorksReq) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type AddVideoWorksRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Succ          bool                   `protobuf:"varint,1,opt,name=Succ,proto3" json:"Succ,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddVideoWorksRes) Reset() {
	*x = AddVideoWorksRes{}
	mi := &file_videoWorks_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddVideoWorksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVideoWorksRes) ProtoMessage() {}

func (x *AddVideoWorksRes) ProtoReflect() protoreflect.Message {
	mi := &file_videoWorks_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVideoWorksRes.ProtoReflect.Descriptor instead.
func (*AddVideoWorksRes) Descriptor() ([]byte, []int) {
	return file_videoWorks_proto_rawDescGZIP(), []int{1}
}

func (x *AddVideoWorksRes) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

type FindVideoWorksReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkId        int32                  `protobuf:"varint,1,opt,name=WorkId,proto3" json:"WorkId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindVideoWorksReq) Reset() {
	*x = FindVideoWorksReq{}
	mi := &file_videoWorks_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindVideoWorksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindVideoWorksReq) ProtoMessage() {}

func (x *FindVideoWorksReq) ProtoReflect() protoreflect.Message {
	mi := &file_videoWorks_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindVideoWorksReq.ProtoReflect.Descriptor instead.
func (*FindVideoWorksReq) Descriptor() ([]byte, []int) {
	return file_videoWorks_proto_rawDescGZIP(), []int{2}
}

func (x *FindVideoWorksReq) GetWorkId() int32 {
	if x != nil {
		return x.WorkId
	}
	return 0
}

type FindVideoWorksRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Desc          string                 `protobuf:"bytes,2,opt,name=Desc,proto3" json:"Desc,omitempty"`
	MusicId       int32                  `protobuf:"varint,3,opt,name=MusicId,proto3" json:"MusicId,omitempty"`
	MusicName     string                 `protobuf:"bytes,4,opt,name=MusicName,proto3" json:"MusicName,omitempty"`
	MusicPath     string                 `protobuf:"bytes,5,opt,name=MusicPath,proto3" json:"MusicPath,omitempty"`
	WorkType      string                 `protobuf:"bytes,6,opt,name=work_type,json=workType,proto3" json:"work_type,omitempty"`
	LikeCount     int32                  `protobuf:"varint,7,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	CommentCount  int32                  `protobuf:"varint,8,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`
	ShareCount    int32                  `protobuf:"varint,9,opt,name=share_count,json=shareCount,proto3" json:"share_count,omitempty"`
	CollectCount  int32                  `protobuf:"varint,10,opt,name=collect_count,json=collectCount,proto3" json:"collect_count,omitempty"`
	BrowseCount   int32                  `protobuf:"varint,11,opt,name=browse_count,json=browseCount,proto3" json:"browse_count,omitempty"`
	Path          string                 `protobuf:"bytes,12,opt,name=Path,proto3" json:"Path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindVideoWorksRes) Reset() {
	*x = FindVideoWorksRes{}
	mi := &file_videoWorks_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindVideoWorksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindVideoWorksRes) ProtoMessage() {}

func (x *FindVideoWorksRes) ProtoReflect() protoreflect.Message {
	mi := &file_videoWorks_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindVideoWorksRes.ProtoReflect.Descriptor instead.
func (*FindVideoWorksRes) Descriptor() ([]byte, []int) {
	return file_videoWorks_proto_rawDescGZIP(), []int{3}
}

func (x *FindVideoWorksRes) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FindVideoWorksRes) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *FindVideoWorksRes) GetMusicId() int32 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

func (x *FindVideoWorksRes) GetMusicName() string {
	if x != nil {
		return x.MusicName
	}
	return ""
}

func (x *FindVideoWorksRes) GetMusicPath() string {
	if x != nil {
		return x.MusicPath
	}
	return ""
}

func (x *FindVideoWorksRes) GetWorkType() string {
	if x != nil {
		return x.WorkType
	}
	return ""
}

func (x *FindVideoWorksRes) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *FindVideoWorksRes) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *FindVideoWorksRes) GetShareCount() int32 {
	if x != nil {
		return x.ShareCount
	}
	return 0
}

func (x *FindVideoWorksRes) GetCollectCount() int32 {
	if x != nil {
		return x.CollectCount
	}
	return 0
}

func (x *FindVideoWorksRes) GetBrowseCount() int32 {
	if x != nil {
		return x.BrowseCount
	}
	return 0
}

func (x *FindVideoWorksRes) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetVideoWorksReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideoWorksReq) Reset() {
	*x = GetVideoWorksReq{}
	mi := &file_videoWorks_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideoWorksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoWorksReq) ProtoMessage() {}

func (x *GetVideoWorksReq) ProtoReflect() protoreflect.Message {
	mi := &file_videoWorks_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoWorksReq.ProtoReflect.Descriptor instead.
func (*GetVideoWorksReq) Descriptor() ([]byte, []int) {
	return file_videoWorks_proto_rawDescGZIP(), []int{4}
}

func (x *GetVideoWorksReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetVideoWorksRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*VideoWorksData      `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideoWorksRes) Reset() {
	*x = GetVideoWorksRes{}
	mi := &file_videoWorks_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideoWorksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoWorksRes) ProtoMessage() {}

func (x *GetVideoWorksRes) ProtoReflect() protoreflect.Message {
	mi := &file_videoWorks_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoWorksRes.ProtoReflect.Descriptor instead.
func (*GetVideoWorksRes) Descriptor() ([]byte, []int) {
	return file_videoWorks_proto_rawDescGZIP(), []int{5}
}

func (x *GetVideoWorksRes) GetData() []*VideoWorksData {
	if x != nil {
		return x.Data
	}
	return nil
}

type VideoWorksData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Desc          string                 `protobuf:"bytes,3,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Music         string                 `protobuf:"bytes,4,opt,name=Music,proto3" json:"Music,omitempty"`
	MusicName     string                 `protobuf:"bytes,5,opt,name=MusicName,proto3" json:"MusicName,omitempty"`
	UserId        int32                  `protobuf:"varint,6,opt,name=UserId,proto3" json:"UserId,omitempty"`
	UserName      string                 `protobuf:"bytes,7,opt,name=UserName,proto3" json:"UserName,omitempty"`
	LikeCount     int32                  `protobuf:"varint,8,opt,name=LikeCount,proto3" json:"LikeCount,omitempty"`
	CommentCount  int32                  `protobuf:"varint,9,opt,name=CommentCount,proto3" json:"CommentCount,omitempty"`
	ObjectPath    string                 `protobuf:"bytes,10,opt,name=ObjectPath,proto3" json:"ObjectPath,omitempty"`
	MusicId       int32                  `protobuf:"varint,11,opt,name=MusicId,proto3" json:"MusicId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VideoWorksData) Reset() {
	*x = VideoWorksData{}
	mi := &file_videoWorks_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoWorksData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoWorksData) ProtoMessage() {}

func (x *VideoWorksData) ProtoReflect() protoreflect.Message {
	mi := &file_videoWorks_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoWorksData.ProtoReflect.Descriptor instead.
func (*VideoWorksData) Descriptor() ([]byte, []int) {
	return file_videoWorks_proto_rawDescGZIP(), []int{6}
}

func (x *VideoWorksData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VideoWorksData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoWorksData) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *VideoWorksData) GetMusic() string {
	if x != nil {
		return x.Music
	}
	return ""
}

func (x *VideoWorksData) GetMusicName() string {
	if x != nil {
		return x.MusicName
	}
	return ""
}

func (x *VideoWorksData) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *VideoWorksData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *VideoWorksData) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *VideoWorksData) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *VideoWorksData) GetObjectPath() string {
	if x != nil {
		return x.ObjectPath
	}
	return ""
}

func (x *VideoWorksData) GetMusicId() int32 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

var File_videoWorks_proto protoreflect.FileDescriptor

const file_videoWorks_proto_rawDesc = "" +
	"\n" +
	"\x10videoWorks.proto\"\xb6\x01\n" +
	"\x10AddVideoWorksReq\x12\x16\n" +
	"\x06UserId\x18\x01 \x01(\x05R\x06UserId\x12\x14\n" +
	"\x05Title\x18\x02 \x01(\tR\x05Title\x12\x12\n" +
	"\x04Desc\x18\x03 \x01(\tR\x04Desc\x12\x18\n" +
	"\aMusicId\x18\x04 \x01(\x05R\aMusicId\x12\x1a\n" +
	"\bWorkType\x18\x05 \x01(\tR\bWorkType\x12\x0e\n" +
	"\x02Ip\x18\b \x01(\tR\x02Ip\x12\x1a\n" +
	"\bFilePath\x18\t \x01(\tR\bFilePath\"&\n" +
	"\x10AddVideoWorksRes\x12\x12\n" +
	"\x04Succ\x18\x01 \x01(\bR\x04Succ\"+\n" +
	"\x11FindVideoWorksReq\x12\x16\n" +
	"\x06WorkId\x18\x01 \x01(\x05R\x06WorkId\"\xf1\x02\n" +
	"\x11FindVideoWorksRes\x12\x14\n" +
	"\x05Title\x18\x01 \x01(\tR\x05Title\x12\x12\n" +
	"\x04Desc\x18\x02 \x01(\tR\x04Desc\x12\x18\n" +
	"\aMusicId\x18\x03 \x01(\x05R\aMusicId\x12\x1c\n" +
	"\tMusicName\x18\x04 \x01(\tR\tMusicName\x12\x1c\n" +
	"\tMusicPath\x18\x05 \x01(\tR\tMusicPath\x12\x1b\n" +
	"\twork_type\x18\x06 \x01(\tR\bworkType\x12\x1d\n" +
	"\n" +
	"like_count\x18\a \x01(\x05R\tlikeCount\x12#\n" +
	"\rcomment_count\x18\b \x01(\x05R\fcommentCount\x12\x1f\n" +
	"\vshare_count\x18\t \x01(\x05R\n" +
	"shareCount\x12#\n" +
	"\rcollect_count\x18\n" +
	" \x01(\x05R\fcollectCount\x12!\n" +
	"\fbrowse_count\x18\v \x01(\x05R\vbrowseCount\x12\x12\n" +
	"\x04Path\x18\f \x01(\tR\x04Path\"&\n" +
	"\x10GetVideoWorksReq\x12\x12\n" +
	"\x04Page\x18\x01 \x01(\x05R\x04Page\"7\n" +
	"\x10GetVideoWorksRes\x12#\n" +
	"\x04data\x18\x01 \x03(\v2\x0f.VideoWorksDataR\x04data\"\xae\x02\n" +
	"\x0eVideoWorksData\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\x05R\x02Id\x12\x14\n" +
	"\x05Title\x18\x02 \x01(\tR\x05Title\x12\x12\n" +
	"\x04Desc\x18\x03 \x01(\tR\x04Desc\x12\x14\n" +
	"\x05Music\x18\x04 \x01(\tR\x05Music\x12\x1c\n" +
	"\tMusicName\x18\x05 \x01(\tR\tMusicName\x12\x16\n" +
	"\x06UserId\x18\x06 \x01(\x05R\x06UserId\x12\x1a\n" +
	"\bUserName\x18\a \x01(\tR\bUserName\x12\x1c\n" +
	"\tLikeCount\x18\b \x01(\x05R\tLikeCount\x12\"\n" +
	"\fCommentCount\x18\t \x01(\x05R\fCommentCount\x12\x1e\n" +
	"\n" +
	"ObjectPath\x18\n" +
	" \x01(\tR\n" +
	"ObjectPath\x12\x18\n" +
	"\aMusicId\x18\v \x01(\x05R\aMusicId2\xb4\x01\n" +
	"\n" +
	"VideoWorks\x125\n" +
	"\rGetVideoWorks\x12\x11.GetVideoWorksReq\x1a\x11.GetVideoWorksRes\x128\n" +
	"\x0eFindVideoWorks\x12\x12.FindVideoWorksReq\x1a\x12.FindVideoWorksRes\x125\n" +
	"\rAddVideoWorks\x12\x11.AddVideoWorksReq\x1a\x11.AddVideoWorksResB\x0eZ\f.;videoWorksb\x06proto3"

var (
	file_videoWorks_proto_rawDescOnce sync.Once
	file_videoWorks_proto_rawDescData []byte
)

func file_videoWorks_proto_rawDescGZIP() []byte {
	file_videoWorks_proto_rawDescOnce.Do(func() {
		file_videoWorks_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_videoWorks_proto_rawDesc), len(file_videoWorks_proto_rawDesc)))
	})
	return file_videoWorks_proto_rawDescData
}

var file_videoWorks_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_videoWorks_proto_goTypes = []any{
	(*AddVideoWorksReq)(nil),  // 0: AddVideoWorksReq
	(*AddVideoWorksRes)(nil),  // 1: AddVideoWorksRes
	(*FindVideoWorksReq)(nil), // 2: FindVideoWorksReq
	(*FindVideoWorksRes)(nil), // 3: FindVideoWorksRes
	(*GetVideoWorksReq)(nil),  // 4: GetVideoWorksReq
	(*GetVideoWorksRes)(nil),  // 5: GetVideoWorksRes
	(*VideoWorksData)(nil),    // 6: VideoWorksData
}
var file_videoWorks_proto_depIdxs = []int32{
	6, // 0: GetVideoWorksRes.data:type_name -> VideoWorksData
	4, // 1: VideoWorks.GetVideoWorks:input_type -> GetVideoWorksReq
	2, // 2: VideoWorks.FindVideoWorks:input_type -> FindVideoWorksReq
	0, // 3: VideoWorks.AddVideoWorks:input_type -> AddVideoWorksReq
	5, // 4: VideoWorks.GetVideoWorks:output_type -> GetVideoWorksRes
	3, // 5: VideoWorks.FindVideoWorks:output_type -> FindVideoWorksRes
	1, // 6: VideoWorks.AddVideoWorks:output_type -> AddVideoWorksRes
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_videoWorks_proto_init() }
func file_videoWorks_proto_init() {
	if File_videoWorks_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_videoWorks_proto_rawDesc), len(file_videoWorks_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_videoWorks_proto_goTypes,
		DependencyIndexes: file_videoWorks_proto_depIdxs,
		MessageInfos:      file_videoWorks_proto_msgTypes,
	}.Build()
	File_videoWorks_proto = out.File
	file_videoWorks_proto_goTypes = nil
	file_videoWorks_proto_depIdxs = nil
}
